<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
		<!-- @Controller와 같이 어노테이션을 활성화 해주는 설정 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	
		<!-- 
      	주소 자동완성 도구 등록
	      - 매 번 /WEB-INF/views/ !!!@!@!.jsp 적기 귀찮으니까 자동완성 해준다.
	      - ViewResolver라는 도구를 등록 (Spring이 등록)
	      class : 패키지 경로를 포함한 view resolver의 풀클래스명
	      prefix : 접두사 / suffix : 접미사
   
    -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.freeeat" />
	
	<!-- 
	
		* 사용자가 어떤 url로 요청을 하던지 이 문서가 읽혀짐
		
		HandlerMapping을 통해서 어떤 url로 어떤 Controller를 구동시킬건지 알아내야함!!
		
		1.요청할 때마다 실행될 Controller클래스들을 bean으로 등록
		
		<beans:bean class = "com.kh.spring.member.controller.LoginController" id="loginController" />
		<beans:bean class = "com.kh.spring.member.controller.LogoutController" id="logoutController" />
		
		2.어떤 url로 요청 시 어떤 Controller를 구동시킬건지 매핑시크는 HandlerMapping관련한 클래스를 빈으로 등록해야함
	
		<beans:bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
			<bean:property name="mappings">
				<beans: props>
				<beans:prop key="login.me"›loginController</beans:prop>
				 <beans: prop key="logout.me"›logoutController</beans:prop>
				</beans:props>
		 </bean:property>
		
		
		</beans:bean>
	
	 -->
	 
	 
	 <!-- 
	 	위 방식이 xml방식
	 	=> 장점 : xml문서 내에서 한눈에 볼 수 있어서 관리의 편의성이 높음
	 	=> 단점 : bean개수가 많아지면 오히려 관리하기 어려움
	 	
	 	어노테이션 방식
	 	=> component - scan에서 지정한 감시할 패키지명 하위의 모든 클래스들을 스캔해서
	 	@Controller와 같이 MVC어노테이션이 붙은 클래스를 자동으로 bean으로 등록해주는 방식
	 	
	 	단, 내가 직접 만든 클래스가 아닐 경우 컴파일이 끝난 .class파일이 배포되어
	 	수정이 불가능하기 때문에 코드상으로 어노테이션을 붙일 수 없다.
	 	이 경우에는 xml파일로 설정하여 등록 해줘야한다.
	 	
	 	내가 만든거 어노테이션, 내가 안만든거 xml
			 
	  -->
	  
	
	
	
</beans:beans>
